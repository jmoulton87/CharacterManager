@model CharacterManager.Models.Character

@using CharacterManager.DAL;
@using CharacterManager.Models;

@{
    ViewBag.Title = "Create";
    UnitOfWork unitOfWork = new UnitOfWork();
    var thisJoinLink = Request.QueryString["joinlink"].ToString();
    var CampaignID = unitOfWork.CampaignRepository.Get().Where(x => x.JoinLink == thisJoinLink).First().CampaignID;
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Character</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CharacterName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CharacterName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CharacterName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CampaignID, "MajorID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CampaignID", null, htmlAttributes: new { @class = "form-control", @Value = CampaignID})
                @Html.ValidationMessageFor(model => model.CampaignID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    <div id="campaignID" @*class="hidden"*@>@CampaignID</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
