@model CharacterManager.Models.Character
@using CharacterManager.Models
@using CharacterManager.DAL


@{
    ViewBag.Title = Model.CharacterName;
    UnitOfWork unitOfWork = new UnitOfWork();
    var campaignID = Model.Campaign.CampaignID;
    var gm = unitOfWork.CharacterRepository.Get().Where(x => x.CampaignID == campaignID).OrderBy(x => x.CharacterID).First();
    var partyloot = unitOfWork.LocationRepository.Get().Where(x => x.Inventory.Character.CharacterID == gm.CharacterID).Where(y => y.LocationType == (LocationType)3);
    var characters = unitOfWork.CharacterRepository.Get().Where(x => x.CampaignID == campaignID && x.CharacterID != Model.CharacterID);

    var inventoryID = Model.Inventories.First().InventoryID;
    var locations = unitOfWork.LocationRepository.Get().Where(x => x.InventoryID == inventoryID);
    var equipment = locations.Where(x => x.LocationType == (LocationType)0).FirstOrDefault();
    var inventory = locations.Where(x => x.LocationType == (LocationType)1).First();
    var bags = locations.Where(x => x.LocationType == (LocationType)2);

    var items = unitOfWork.ItemRepository.Get().Where(x => x.Location.Inventory.CharacterID == Model.CharacterID);
    var partylootitems = partyloot.First().Items;
}

<h2>@Model.CharacterName</h2>

<div id="characterID" class="hidden" value="@Model.CharacterID"></div>



<div class="container">
    <div class="row">
        <div class="inventory-container pull-left">

            <div id="EquipmentGrid" class="inventory-table" location-id="@equipment.LocationID">
                <div class="inventory-row">
                    <div class="inventory-name">
                        Equipment
                    </div>
                </div>
                <div class="inventory-row">
                    <div class="inventory-cell" cellid="1" location-id="@equipment.LocationID" item-type="head"></div>
                    <div class="equipment-label1">Head</div>
                    <div class="equipment-label2">Belt</div>
                    <div class="inventory-cell" cellid="9" location-id="@equipment.LocationID" item-type="belt"></div>
                </div>
                <div class="inventory-row">
                    <div class="inventory-cell" cellid="2" location-id="@equipment.LocationID" item-type="headband"></div>
                    <div class="equipment-label1">Headband</div>
                    <div class="equipment-label2">Wrists</div>
                    <div class="inventory-cell" cellid="10" location-id="@equipment.LocationID" item-type="wrists"></div>
                </div>
                <div class="inventory-row">
                    <div class="inventory-cell" cellid="3" location-id="@equipment.LocationID" item-type="eyes"></div>
                    <div class="equipment-label1">Eyes</div>
                    <div class="equipment-label2">Hands</div>
                    <div class="inventory-cell" cellid="11" location-id="@equipment.LocationID" item-type="hands"></div>
                </div>
                <div class="inventory-row">
                    <div class="inventory-cell" cellid="4" location-id="@equipment.LocationID" item-type="shoulders"></div>
                    <div class="equipment-label1">Shoulders</div>
                    <div class="equipment-label2">Ring</div>
                    <div class="inventory-cell" cellid="12" location-id="@equipment.LocationID" item-type="ring"></div>
                </div>
                <div class="inventory-row">
                    <div class="inventory-cell" cellid="5" location-id="@equipment.LocationID" item-type="neck"></div>
                    <div class="equipment-label1">Neck</div>
                    <div class="equipment-label2">Ring</div>
                    <div class="inventory-cell" cellid="13" location-id="@equipment.LocationID" item-type="ring"></div>
                </div>
                <div class="inventory-row">
                    <div class="inventory-cell" cellid="6" location-id="@equipment.LocationID" item-type="chest"></div>
                    <div class="equipment-label1">Chest</div>
                </div>
                <div class="inventory-row">
                    <div class="inventory-cell" cellid="7" location-id="@equipment.LocationID" item-type="body"></div>
                    <div class="equipment-label1">Body</div>
                    <div class="equipment-label2">Primary</div>
                    <div class="inventory-cell" cellid="14" location-id="@equipment.LocationID" item-type="onehandedweapon twohandedweapon rangedweapon"></div>
                </div>
                <div class="inventory-row">
                    <div class="inventory-cell" cellid="8" location-id="@equipment.LocationID" item-type="armor"></div>
                    <div class="equipment-label1">Armor</div>
                    <div class="equipment-label2">Secondary</div>
                    <div class="inventory-cell" cellid="15" location-id="@equipment.LocationID" item-type="onehandedweapon shield ammo"></div>
                </div>
            </div>

        </div>
        <div class="inventory-container pull-left">

            <div id="InventoryGrid" class="inventory-table" location-id="@inventory.LocationID">
                <div class="inventory-row">
                    <div class="inventory-name">
                        Inventory
                    </div>
                </div>


            </div>
        </div>

    </div>
</div>

<div class="container">
    <div class="row">
        @foreach (var bag in bags)
        {
        <div class="inventory-container pull-left">



            <div id="bag-location_@bag.LocationID" class="inventory-table inventory-bag" location-id="@bag.LocationID">
                <div class="inventory-row">
                    <div class="inventory-cell itemlock" item-type="all">
                        <div class="inventory-item @unitOfWork.ItemRepository.GetByID(bag.ItemID).BaseItem.Icon.IconSheet @unitOfWork.ItemRepository.GetByID(bag.ItemID).BaseItem.Icon.IconPosition itemlock" ></div>
                    </div>
                    <div class="inventory-name">@bag.LocationName</div>
                </div>

            </div>

        </div>
        }
    </div>
</div>



<div id="quantity-picker" class="quantity-picker-container hidden">
    <input id="quantity-picker-number" class="form-control" type="number" min="1" max="100" value="100" />
    <div id="quantity-picker-slider"></div>
    <div id="quantity-picker-cancel" class="btn btn-default btn-xs pull-left">X</div>
    <div id="quantity-picker-button" class="btn btn-default btn-xs pull-right">OK</div>
</div>





<div id="itemSpawn" class="hidden">
    @foreach (var item in items)
    {
    <div class="inventory-item @item.BaseItem.Icon.IconSheet @item.BaseItem.Icon.IconPosition" item-id="@item.ItemID" baseitem-id="@item.BaseItemID" slot-id="@item.Slot" location-id="@item.LocationID" item-type=@item.BaseItem.BaseItemType max-quantity="@item.BaseItem.MaxQuantity">
        @if (item.Quantity > 1)
        {
            <div class="item-quantity">@item.Quantity</div>
        }
    </div>
    }
</div>

<div id="itemCards" class="hidden">
    @foreach (var item in items)
    {

    }
</div>


@*<p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.CharacterID }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@

@section Scripts {
    @Scripts.Render("~/Scripts/CharacterUI.js")
}
